import{_ as g,F as c,o as x,x as r,z as d,B as m,ac as b,y as a,a as u,w as f,C as v,ag as D,ah as n,ai as w}from"./index-BtIo2-Z_.js";import{X as h}from"./xlsx-CILBIiVl.js";import{V as y}from"./index-SDX8Otz2.js";import{V as T}from"./VBtn--bGuKZaN.js";const V=w(new Worker("/import/worker.js")),N=t=>new Promise((e,s)=>{const i=new FileReader;i.onerror=()=>s(i.error),i.onload=o=>{e(i.result)},t&&i.readAsArrayBuffer(t)}),S={props:{modelValue:{type:Object,default:()=>[]},initialData:{type:Object,default:()=>({})},disabled:{type:Boolean},bundleName:{type:String}},computed:{model:{get(){return this.modelValue},set(t){this.$emit("update:modelValue",t)}}},data(){return{isDragover:!1,importText:void 0}},methods:{async upload(t){if(typeof this.bundleName>"u")return alert(this.$t("You need to select the bundle"));this.$emit("setLoading",!0);const e=await N(t[0]),s=h.read(e,{cellDates:!0,cellNF:!1,cellText:!1}),i=s.SheetNames,o=s.Sheets[i[0]];let p=h.utils.sheet_to_json(o,{header:1});this.model=p,this.isDragover=!1},async importTSV(){if(this.$emit("setLoading",!0),!this.importText.match(/[\r\n]/))return this.model=[this.importText];let t=await V(this.importText);this.model=t}},watch:{bundleName(t){this.$emit("setBundle",t)}}},B={class:"import-text flex-grow-1 mt-4",style:{"min-height":"300px"}},k={class:"text-h5 mb-2"},C={class:"text-h5 mb-2"},_={class:"text-h5 mb-2"},j=["disabled"],z={class:"ml-2 mt-2 text-right"};function F(t,e,s,i,o,p){return x(),c("div",null,[r("div",B,[d(r("div",{class:b(["text-center drag-text",{"drag-over":o.isDragover}])},[d(r("div",null,[r("div",k,a(t.$t("Select bundle")),1),r("div",null,a(t.$t("To start data import select the bundle, download the relevant template and provide the data")),1)],512),[[m,typeof s.bundleName>"u"]]),d(r("div",null,[r("div",C,a(t.$t("Add your data here")),1),r("div",null,a(t.$t("To begin, select the table you want to import in Excel, copy it to the clipboard, and the paste here")),1),r("div",null,a(t.$t("or drop the Excel file")),1)],512),[[m,!o.isDragover&&s.bundleName]]),d(r("div",null,[u(y,{size:"x-large",class:"mb-2"},{default:f(()=>e[8]||(e[8]=[v("mdi-upload")])),_:1}),r("div",_,a(t.$t("Drop your file here")),1)],512),[[m,o.isDragover]])],2),[[m,!o.importText]]),d(r("textarea",{"onUpdate:modelValue":e[0]||(e[0]=l=>o.importText=l),disabled:typeof s.bundleName>"u",onDrag:e[1]||(e[1]=n(()=>{},["prevent","stop"])),onDragstart:e[2]||(e[2]=n(()=>{},["prevent","stop"])),onDragover:e[3]||(e[3]=n(l=>o.isDragover=!0,["prevent","stop"])),onDragenter:e[4]||(e[4]=n(l=>o.isDragover=!0,["prevent","stop"])),onDragend:e[5]||(e[5]=n(l=>o.isDragover=!1,["prevent","stop"])),onDragleave:e[6]||(e[6]=n(l=>o.isDragover=!1,["prevent","stop"])),onDrop:e[7]||(e[7]=n(l=>p.upload(l.dataTransfer.files),["prevent","stop"])),class:"w-100 h-100 elevation-2 pa-1","data-gramm":"false",spellcheck:"false",autocapitalize:"none",autocorrect:"off",autocomplete:"off"},null,40,j),[[D,o.importText]])]),r("div",z,[d(u(T,{onClick:p.importTSV,class:"ml-2",color:"primary"},{default:f(()=>[v(a(t.$t("Import")),1)]),_:1},8,["onClick"]),[[m,o.importText]])])])}const X=g(S,[["render",F]]);export{X as _};
