var r,l;function f(){if(l)return r;l=1;const o="Point",u="MultiPoint",c="LineString",h="MultiLineString",a="Polygon",d="MultiPolygon",y="GeometryCollection",s="Feature",n="FeatureCollection";class L{constructor(t,e){e=typeof e=="object"?e:{},this.pointsList=e.ignorePoints===!0?void 0:[],this.linesList=e.ignoreLines===!0?void 0:[],this.polygonsList=e.ignorePolygons===!0?void 0:[],this._loadGeneric(t)}get points(){return{type:n,features:this.pointsList||[]}}get lines(){return{type:n,features:this.linesList||[]}}get polygons(){return{type:n,features:this.polygonsList||[]}}_loadGeneric(t,e){if(this.pointsList!==void 0)switch(t.type){case o:return this._loadPoint(t.coordinates,e);case u:return t.coordinates.forEach(i=>this._loadPoint(i,e))}if(this.linesList!==void 0)switch(t.type){case c:return this._loadLine(t.coordinates,e);case h:return t.coordinates.forEach(i=>this._loadLine(i,e))}if(this.polygonsList!==void 0)switch(t.type){case a:return this._loadPolygon(t.coordinates,e);case d:return t.coordinates.forEach(i=>this._loadPolygon(i,e))}switch(t.type){case s:return this._loadGeneric(t.geometry,t.properties);case n:return t.features.forEach(i=>this._loadGeneric(i.geometry,i.properties));case y:return t.geometries.forEach(i=>this._loadGeneric(i,e))}}_loadPoint(t,e){this.pointsList.push({type:s,geometry:{type:o,coordinates:t},properties:e})}_loadLine(t,e){this.linesList.push({type:s,geometry:{type:c,coordinates:t},properties:e})}_loadPolygon(t,e){this.polygonsList.push({type:s,geometry:{type:a,coordinates:t},properties:e})}}return r=L,r}export{f as r};
