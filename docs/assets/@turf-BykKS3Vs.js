var oe=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function ue(f){return f&&f.__esModule&&Object.prototype.hasOwnProperty.call(f,"default")?f.default:f}var V={},F={},X={},Z;function re(){return Z||(Z=1,function(f){Object.defineProperty(f,"__esModule",{value:!0}),f.earthRadius=63710088e-1,f.factors={centimeters:f.earthRadius*100,centimetres:f.earthRadius*100,degrees:f.earthRadius/111325,feet:f.earthRadius*3.28084,inches:f.earthRadius*39.37,kilometers:f.earthRadius/1e3,kilometres:f.earthRadius/1e3,meters:f.earthRadius,metres:f.earthRadius,miles:f.earthRadius/1609.344,millimeters:f.earthRadius*1e3,millimetres:f.earthRadius*1e3,nauticalmiles:f.earthRadius/1852,radians:1,yards:f.earthRadius*1.0936},f.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:1/1e3,kilometres:1/1e3,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/f.earthRadius,yards:1.0936133},f.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046};function L(i,l,u){u===void 0&&(u={});var E={type:"Feature"};return(u.id===0||u.id)&&(E.id=u.id),u.bbox&&(E.bbox=u.bbox),E.properties=l||{},E.geometry=i,E}f.feature=L;function k(i,l,u){switch(i){case"Point":return M(l).geometry;case"LineString":return S(l).geometry;case"Polygon":return y(l).geometry;case"MultiPoint":return P(l).geometry;case"MultiLineString":return b(l).geometry;case"MultiPolygon":return p(l).geometry;default:throw new Error(i+" is invalid")}}f.geometry=k;function M(i,l,u){if(u===void 0&&(u={}),!i)throw new Error("coordinates is required");if(!Array.isArray(i))throw new Error("coordinates must be an Array");if(i.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!o(i[0])||!o(i[1]))throw new Error("coordinates must contain numbers");var E={type:"Point",coordinates:i};return L(E,l,u)}f.point=M;function w(i,l,u){return u===void 0&&(u={}),n(i.map(function(E){return M(E,l)}),u)}f.points=w;function y(i,l,u){u===void 0&&(u={});for(var E=0,$=i;E<$.length;E++){var A=$[E];if(A.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var J=0;J<A[A.length-1].length;J++)if(A[A.length-1][J]!==A[0][J])throw new Error("First and last Position are not equivalent.")}var D={type:"Polygon",coordinates:i};return L(D,l,u)}f.polygon=y;function O(i,l,u){return u===void 0&&(u={}),n(i.map(function(E){return y(E,l)}),u)}f.polygons=O;function S(i,l,u){if(u===void 0&&(u={}),i.length<2)throw new Error("coordinates must be an array of two or more positions");var E={type:"LineString",coordinates:i};return L(E,l,u)}f.lineString=S;function m(i,l,u){return u===void 0&&(u={}),n(i.map(function(E){return S(E,l)}),u)}f.lineStrings=m;function n(i,l){l===void 0&&(l={});var u={type:"FeatureCollection"};return l.id&&(u.id=l.id),l.bbox&&(u.bbox=l.bbox),u.features=i,u}f.featureCollection=n;function b(i,l,u){u===void 0&&(u={});var E={type:"MultiLineString",coordinates:i};return L(E,l,u)}f.multiLineString=b;function P(i,l,u){u===void 0&&(u={});var E={type:"MultiPoint",coordinates:i};return L(E,l,u)}f.multiPoint=P;function p(i,l,u){u===void 0&&(u={});var E={type:"MultiPolygon",coordinates:i};return L(E,l,u)}f.multiPolygon=p;function R(i,l,u){u===void 0&&(u={});var E={type:"GeometryCollection",geometries:i};return L(E,l,u)}f.geometryCollection=R;function C(i,l){if(l===void 0&&(l=0),l&&!(l>=0))throw new Error("precision must be a positive number");var u=Math.pow(10,l||0);return Math.round(i*u)/u}f.round=C;function G(i,l){l===void 0&&(l="kilometers");var u=f.factors[l];if(!u)throw new Error(l+" units is invalid");return i*u}f.radiansToLength=G;function d(i,l){l===void 0&&(l="kilometers");var u=f.factors[l];if(!u)throw new Error(l+" units is invalid");return i/u}f.lengthToRadians=d;function g(i,l){return t(d(i,l))}f.lengthToDegrees=g;function r(i){var l=i%360;return l<0&&(l+=360),l}f.bearingToAzimuth=r;function t(i){var l=i%(2*Math.PI);return l*180/Math.PI}f.radiansToDegrees=t;function a(i){var l=i%360;return l*Math.PI/180}f.degreesToRadians=a;function e(i,l,u){if(l===void 0&&(l="kilometers"),u===void 0&&(u="kilometers"),!(i>=0))throw new Error("length must be a positive number");return G(d(i,l),u)}f.convertLength=e;function s(i,l,u){if(l===void 0&&(l="meters"),u===void 0&&(u="kilometers"),!(i>=0))throw new Error("area must be a positive number");var E=f.areaFactors[l];if(!E)throw new Error("invalid original units");var $=f.areaFactors[u];if(!$)throw new Error("invalid final units");return i/E*$}f.convertArea=s;function o(i){return!isNaN(i)&&i!==null&&!Array.isArray(i)}f.isNumber=o;function v(i){return!!i&&i.constructor===Object}f.isObject=v;function h(i){if(!i)throw new Error("bbox is required");if(!Array.isArray(i))throw new Error("bbox must be an Array");if(i.length!==4&&i.length!==6)throw new Error("bbox must be an Array of 4 or 6 numbers");i.forEach(function(l){if(!o(l))throw new Error("bbox must only contain numbers")})}f.validateBBox=h;function c(i){if(!i)throw new Error("id is required");if(["string","number"].indexOf(typeof i)===-1)throw new Error("id must be a number or a string")}f.validateId=c}(X)),X}var W;function te(){if(W)return F;W=1,Object.defineProperty(F,"__esModule",{value:!0});var f=re();function L(r,t,a){if(r!==null)for(var e,s,o,v,h,c,i,l=0,u=0,E,$=r.type,A=$==="FeatureCollection",J=$==="Feature",D=A?r.features.length:1,_=0;_<D;_++){i=A?r.features[_].geometry:J?r.geometry:r,E=i?i.type==="GeometryCollection":!1,h=E?i.geometries.length:1;for(var Q=0;Q<h;Q++){var T=0,I=0;if(v=E?i.geometries[Q]:i,v!==null){c=v.coordinates;var N=v.type;switch(l=a&&(N==="Polygon"||N==="MultiPolygon")?1:0,N){case null:break;case"Point":if(t(c,u,_,T,I)===!1)return!1;u++,T++;break;case"LineString":case"MultiPoint":for(e=0;e<c.length;e++){if(t(c[e],u,_,T,I)===!1)return!1;u++,N==="MultiPoint"&&T++}N==="LineString"&&T++;break;case"Polygon":case"MultiLineString":for(e=0;e<c.length;e++){for(s=0;s<c[e].length-l;s++){if(t(c[e][s],u,_,T,I)===!1)return!1;u++}N==="MultiLineString"&&T++,N==="Polygon"&&I++}N==="Polygon"&&T++;break;case"MultiPolygon":for(e=0;e<c.length;e++){for(I=0,s=0;s<c[e].length;s++){for(o=0;o<c[e][s].length-l;o++){if(t(c[e][s][o],u,_,T,I)===!1)return!1;u++}I++}T++}break;case"GeometryCollection":for(e=0;e<v.geometries.length;e++)if(L(v.geometries[e],t,a)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function k(r,t,a,e){var s=a;return L(r,function(o,v,h,c,i){v===0&&a===void 0?s=o:s=t(s,o,v,h,c,i)},e),s}function M(r,t){var a;switch(r.type){case"FeatureCollection":for(a=0;a<r.features.length&&t(r.features[a].properties,a)!==!1;a++);break;case"Feature":t(r.properties,0);break}}function w(r,t,a){var e=a;return M(r,function(s,o){o===0&&a===void 0?e=s:e=t(e,s,o)}),e}function y(r,t){if(r.type==="Feature")t(r,0);else if(r.type==="FeatureCollection")for(var a=0;a<r.features.length&&t(r.features[a],a)!==!1;a++);}function O(r,t,a){var e=a;return y(r,function(s,o){o===0&&a===void 0?e=s:e=t(e,s,o)}),e}function S(r){var t=[];return L(r,function(a){t.push(a)}),t}function m(r,t){var a,e,s,o,v,h,c,i,l,u,E=0,$=r.type==="FeatureCollection",A=r.type==="Feature",J=$?r.features.length:1;for(a=0;a<J;a++){for(h=$?r.features[a].geometry:A?r.geometry:r,i=$?r.features[a].properties:A?r.properties:{},l=$?r.features[a].bbox:A?r.bbox:void 0,u=$?r.features[a].id:A?r.id:void 0,c=h?h.type==="GeometryCollection":!1,v=c?h.geometries.length:1,s=0;s<v;s++){if(o=c?h.geometries[s]:h,o===null){if(t(null,E,i,l,u)===!1)return!1;continue}switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(t(o,E,i,l,u)===!1)return!1;break}case"GeometryCollection":{for(e=0;e<o.geometries.length;e++)if(t(o.geometries[e],E,i,l,u)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}E++}}function n(r,t,a){var e=a;return m(r,function(s,o,v,h,c){o===0&&a===void 0?e=s:e=t(e,s,o,v,h,c)}),e}function b(r,t){m(r,function(a,e,s,o,v){var h=a===null?null:a.type;switch(h){case null:case"Point":case"LineString":case"Polygon":return t(f.feature(a,s,{bbox:o,id:v}),e,0)===!1?!1:void 0}var c;switch(h){case"MultiPoint":c="Point";break;case"MultiLineString":c="LineString";break;case"MultiPolygon":c="Polygon";break}for(var i=0;i<a.coordinates.length;i++){var l=a.coordinates[i],u={type:c,coordinates:l};if(t(f.feature(u,s),e,i)===!1)return!1}})}function P(r,t,a){var e=a;return b(r,function(s,o,v){o===0&&v===0&&a===void 0?e=s:e=t(e,s,o,v)}),e}function p(r,t){b(r,function(a,e,s){var o=0;if(a.geometry){var v=a.geometry.type;if(!(v==="Point"||v==="MultiPoint")){var h,c=0,i=0,l=0;if(L(a,function(u,E,$,A,J){if(h===void 0||e>c||A>i||J>l){h=u,c=e,i=A,l=J,o=0;return}var D=f.lineString([h,u],a.properties);if(t(D,e,s,J,o)===!1)return!1;o++,h=u})===!1)return!1}}})}function R(r,t,a){var e=a,s=!1;return p(r,function(o,v,h,c,i){s===!1&&a===void 0?e=o:e=t(e,o,v,h,c,i),s=!0}),e}function C(r,t){if(!r)throw new Error("geojson is required");b(r,function(a,e,s){if(a.geometry!==null){var o=a.geometry.type,v=a.geometry.coordinates;switch(o){case"LineString":if(t(a,e,s,0,0)===!1)return!1;break;case"Polygon":for(var h=0;h<v.length;h++)if(t(f.lineString(v[h],a.properties),e,s,h)===!1)return!1;break}}})}function G(r,t,a){var e=a;return C(r,function(s,o,v,h){o===0&&a===void 0?e=s:e=t(e,s,o,v,h)}),e}function d(r,t){if(t=t||{},!f.isObject(t))throw new Error("options is invalid");var a=t.featureIndex||0,e=t.multiFeatureIndex||0,s=t.geometryIndex||0,o=t.segmentIndex||0,v=t.properties,h;switch(r.type){case"FeatureCollection":a<0&&(a=r.features.length+a),v=v||r.features[a].properties,h=r.features[a].geometry;break;case"Feature":v=v||r.properties,h=r.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":h=r;break;default:throw new Error("geojson is invalid")}if(h===null)return null;var c=h.coordinates;switch(h.type){case"Point":case"MultiPoint":return null;case"LineString":return o<0&&(o=c.length+o-1),f.lineString([c[o],c[o+1]],v,t);case"Polygon":return s<0&&(s=c.length+s),o<0&&(o=c[s].length+o-1),f.lineString([c[s][o],c[s][o+1]],v,t);case"MultiLineString":return e<0&&(e=c.length+e),o<0&&(o=c[e].length+o-1),f.lineString([c[e][o],c[e][o+1]],v,t);case"MultiPolygon":return e<0&&(e=c.length+e),s<0&&(s=c[e].length+s),o<0&&(o=c[e][s].length-o-1),f.lineString([c[e][s][o],c[e][s][o+1]],v,t)}throw new Error("geojson is invalid")}function g(r,t){if(t=t||{},!f.isObject(t))throw new Error("options is invalid");var a=t.featureIndex||0,e=t.multiFeatureIndex||0,s=t.geometryIndex||0,o=t.coordIndex||0,v=t.properties,h;switch(r.type){case"FeatureCollection":a<0&&(a=r.features.length+a),v=v||r.features[a].properties,h=r.features[a].geometry;break;case"Feature":v=v||r.properties,h=r.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":h=r;break;default:throw new Error("geojson is invalid")}if(h===null)return null;var c=h.coordinates;switch(h.type){case"Point":return f.point(c,v,t);case"MultiPoint":return e<0&&(e=c.length+e),f.point(c[e],v,t);case"LineString":return o<0&&(o=c.length+o),f.point(c[o],v,t);case"Polygon":return s<0&&(s=c.length+s),o<0&&(o=c[s].length+o),f.point(c[s][o],v,t);case"MultiLineString":return e<0&&(e=c.length+e),o<0&&(o=c[e].length+o),f.point(c[e][o],v,t);case"MultiPolygon":return e<0&&(e=c.length+e),s<0&&(s=c[e].length+s),o<0&&(o=c[e][s].length-o),f.point(c[e][s][o],v,t)}throw new Error("geojson is invalid")}return F.coordAll=S,F.coordEach=L,F.coordReduce=k,F.featureEach=y,F.featureReduce=O,F.findPoint=g,F.findSegment=d,F.flattenEach=b,F.flattenReduce=P,F.geomEach=m,F.geomReduce=n,F.lineEach=C,F.lineReduce=G,F.propEach=M,F.propReduce=w,F.segmentEach=p,F.segmentReduce=R,F}var H;function ne(){if(H)return V;H=1,Object.defineProperty(V,"__esModule",{value:!0});var f=te();function L(k){var M=[1/0,1/0,-1/0,-1/0];return f.coordEach(k,function(w){M[0]>w[0]&&(M[0]=w[0]),M[1]>w[1]&&(M[1]=w[1]),M[2]<w[0]&&(M[2]=w[0]),M[3]<w[1]&&(M[3]=w[1])}),M}return L.default=L,V.default=L,V}var q={},z={},B={},U;function Y(){if(U)return B;U=1,Object.defineProperty(B,"__esModule",{value:!0});var f=re();function L(n){if(!n)throw new Error("coord is required");if(!Array.isArray(n)){if(n.type==="Feature"&&n.geometry!==null&&n.geometry.type==="Point")return n.geometry.coordinates;if(n.type==="Point")return n.coordinates}if(Array.isArray(n)&&n.length>=2&&!Array.isArray(n[0])&&!Array.isArray(n[1]))return n;throw new Error("coord must be GeoJSON Point or an Array of numbers")}B.getCoord=L;function k(n){if(Array.isArray(n))return n;if(n.type==="Feature"){if(n.geometry!==null)return n.geometry.coordinates}else if(n.coordinates)return n.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}B.getCoords=k;function M(n){if(n.length>1&&f.isNumber(n[0])&&f.isNumber(n[1]))return!0;if(Array.isArray(n[0])&&n[0].length)return M(n[0]);throw new Error("coordinates must only contain numbers")}B.containsNumber=M;function w(n,b,P){if(!b||!P)throw new Error("type and name required");if(!n||n.type!==b)throw new Error("Invalid input to "+P+": must be a "+b+", given "+n.type)}B.geojsonType=w;function y(n,b,P){if(!n)throw new Error("No feature passed");if(!P)throw new Error(".featureOf() requires a name");if(!n||n.type!=="Feature"||!n.geometry)throw new Error("Invalid input to "+P+", Feature with geometry required");if(!n.geometry||n.geometry.type!==b)throw new Error("Invalid input to "+P+": must be a "+b+", given "+n.geometry.type)}B.featureOf=y;function O(n,b,P){if(!n)throw new Error("No featureCollection passed");if(!P)throw new Error(".collectionOf() requires a name");if(!n||n.type!=="FeatureCollection")throw new Error("Invalid input to "+P+", FeatureCollection required");for(var p=0,R=n.features;p<R.length;p++){var C=R[p];if(!C||C.type!=="Feature"||!C.geometry)throw new Error("Invalid input to "+P+", Feature with geometry required");if(!C.geometry||C.geometry.type!==b)throw new Error("Invalid input to "+P+": must be a "+b+", given "+C.geometry.type)}}B.collectionOf=O;function S(n){return n.type==="Feature"?n.geometry:n}B.getGeom=S;function m(n,b){return n.type==="FeatureCollection"?"FeatureCollection":n.type==="GeometryCollection"?"GeometryCollection":n.type==="Feature"&&n.geometry!==null?n.geometry.type:n.type}return B.getType=m,B}var j;function ie(){if(j)return z;j=1,Object.defineProperty(z,"__esModule",{value:!0});var f=Y();function L(w,y,O){if(O===void 0&&(O={}),!w)throw new Error("point is required");if(!y)throw new Error("polygon is required");var S=f.getCoord(w),m=f.getGeom(y),n=m.type,b=y.bbox,P=m.coordinates;if(b&&M(S,b)===!1)return!1;n==="Polygon"&&(P=[P]);for(var p=!1,R=0;R<P.length&&!p;R++)if(k(S,P[R][0],O.ignoreBoundary)){for(var C=!1,G=1;G<P[R].length&&!C;)k(S,P[R][G],!O.ignoreBoundary)&&(C=!0),G++;C||(p=!0)}return p}z.default=L;function k(w,y,O){var S=!1;y[0][0]===y[y.length-1][0]&&y[0][1]===y[y.length-1][1]&&(y=y.slice(0,y.length-1));for(var m=0,n=y.length-1;m<y.length;n=m++){var b=y[m][0],P=y[m][1],p=y[n][0],R=y[n][1],C=w[1]*(b-p)+P*(p-w[0])+R*(w[0]-b)===0&&(b-w[0])*(p-w[0])<=0&&(P-w[1])*(R-w[1])<=0;if(C)return!O;var G=P>w[1]!=R>w[1]&&w[0]<(p-b)*(w[1]-P)/(R-P)+b;G&&(S=!S)}return S}function M(w,y){return y[0]<=w[0]&&y[1]<=w[1]&&y[2]>=w[0]&&y[3]>=w[1]}return z}var K={},x;function ae(){if(x)return K;x=1,Object.defineProperty(K,"__esModule",{value:!0});var f=Y();function L(M,w,y){y===void 0&&(y={});for(var O=f.getCoord(M),S=f.getCoords(w),m=0;m<S.length-1;m++){var n=!1;if(y.ignoreEndVertices&&(m===0&&(n="start"),m===S.length-2&&(n="end"),m===0&&m+1===S.length-1&&(n="both")),k(S[m],S[m+1],O,n,typeof y.epsilon>"u"?null:y.epsilon))return!0}return!1}function k(M,w,y,O,S){var m=y[0],n=y[1],b=M[0],P=M[1],p=w[0],R=w[1],C=y[0]-b,G=y[1]-P,d=p-b,g=R-P,r=C*g-G*d;if(S!==null){if(Math.abs(r)>S)return!1}else if(r!==0)return!1;if(O){if(O==="start")return Math.abs(d)>=Math.abs(g)?d>0?b<m&&m<=p:p<=m&&m<b:g>0?P<n&&n<=R:R<=n&&n<P;if(O==="end")return Math.abs(d)>=Math.abs(g)?d>0?b<=m&&m<p:p<m&&m<=b:g>0?P<=n&&n<R:R<n&&n<=P;if(O==="both")return Math.abs(d)>=Math.abs(g)?d>0?b<m&&m<p:p<m&&m<b:g>0?P<n&&n<R:R<n&&n<P}else return Math.abs(d)>=Math.abs(g)?d>0?b<=m&&m<=p:p<=m&&m<=b:g>0?P<=n&&n<=R:R<=n&&n<=P;return!1}return K.default=L,K}var ee;function fe(){if(ee)return q;ee=1;var f=q&&q.__importDefault||function(d){return d&&d.__esModule?d:{default:d}};Object.defineProperty(q,"__esModule",{value:!0});var L=f(ne()),k=f(ie()),M=f(ae()),w=Y();function y(d,g){var r=w.getGeom(d),t=w.getGeom(g),a=r.type,e=t.type,s=r.coordinates,o=t.coordinates;switch(a){case"Point":switch(e){case"Point":return C(s,o);default:throw new Error("feature2 "+e+" geometry not supported")}case"MultiPoint":switch(e){case"Point":return O(r,t);case"MultiPoint":return S(r,t);default:throw new Error("feature2 "+e+" geometry not supported")}case"LineString":switch(e){case"Point":return M.default(t,r,{ignoreEndVertices:!0});case"LineString":return b(r,t);case"MultiPoint":return m(r,t);default:throw new Error("feature2 "+e+" geometry not supported")}case"Polygon":switch(e){case"Point":return k.default(t,r,{ignoreBoundary:!0});case"LineString":return P(r,t);case"Polygon":return p(r,t);case"MultiPoint":return n(r,t);default:throw new Error("feature2 "+e+" geometry not supported")}default:throw new Error("feature1 "+a+" geometry not supported")}}q.default=y;function O(d,g){var r,t=!1;for(r=0;r<d.coordinates.length;r++)if(C(d.coordinates[r],g.coordinates)){t=!0;break}return t}q.isPointInMultiPoint=O;function S(d,g){for(var r=0,t=g.coordinates;r<t.length;r++){for(var a=t[r],e=!1,s=0,o=d.coordinates;s<o.length;s++){var v=o[s];if(C(a,v)){e=!0;break}}if(!e)return!1}return!0}q.isMultiPointInMultiPoint=S;function m(d,g){for(var r=!1,t=0,a=g.coordinates;t<a.length;t++){var e=a[t];if(M.default(e,d,{ignoreEndVertices:!0})&&(r=!0),!M.default(e,d))return!1}return!!r}q.isMultiPointOnLine=m;function n(d,g){for(var r=0,t=g.coordinates;r<t.length;r++){var a=t[r];if(!k.default(a,d,{ignoreBoundary:!0}))return!1}return!0}q.isMultiPointInPoly=n;function b(d,g){for(var r=!1,t=0,a=g.coordinates;t<a.length;t++){var e=a[t];if(M.default({type:"Point",coordinates:e},d,{ignoreEndVertices:!0})&&(r=!0),!M.default({type:"Point",coordinates:e},d,{ignoreEndVertices:!1}))return!1}return r}q.isLineOnLine=b;function P(d,g){var r=!1,t=0,a=L.default(d),e=L.default(g);if(!R(a,e))return!1;for(t;t<g.coordinates.length-1;t++){var s=G(g.coordinates[t],g.coordinates[t+1]);if(k.default({type:"Point",coordinates:s},d,{ignoreBoundary:!0})){r=!0;break}}return r}q.isLineInPoly=P;function p(d,g){if(d.type==="Feature"&&d.geometry===null||g.type==="Feature"&&g.geometry===null)return!1;var r=L.default(d),t=L.default(g);if(!R(r,t))return!1;for(var a=w.getGeom(g).coordinates,e=0,s=a;e<s.length;e++)for(var o=s[e],v=0,h=o;v<h.length;v++){var c=h[v];if(!k.default(c,d))return!1}return!0}q.isPolyInPoly=p;function R(d,g){return!(d[0]>g[0]||d[2]<g[2]||d[1]>g[1]||d[3]<g[3])}q.doBBoxOverlap=R;function C(d,g){return d[0]===g[0]&&d[1]===g[1]}q.compareCoords=C;function G(d,g){return[(d[0]+g[0])/2,(d[1]+g[1])/2]}return q.getMidpoint=G,q}export{fe as a,oe as c,ue as g,ne as r};
