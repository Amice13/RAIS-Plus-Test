import{b$ as ce}from"./index-BtIo2-Z_.js";const ue=(e,r)=>{const t=document.createElement("a");t.href=e,t.download=r,t.style="display: none",document.body.appendChild(t),t.click(),t.remove()},fe=(e,r,t)=>{const n=new Blob([e],{type:t}),s=window.URL.createObjectURL(n);ue(s,r),setTimeout(()=>window.URL.revokeObjectURL(s),100)},pe=new RegExp(`(?<=\\[(?<qoute>['"]))[^'"\\]].*?(?=\\k<qoute>\\])|(?<=\\[)[^'"\\]].*?(?=\\])|[^.\\["''\\]]+(?=\\.|\\[|$)`,"g"),te=(e,r)=>{let t=r.length;for(let n=0;n<t;n++){if(typeof e>"u")return;if(Array.isArray(e)&&typeof r[n]=="string")return e.map(s=>te(s,r.slice(n)));e=e[r[n]]}return e},P=(e,r)=>{let t=r.match(pe);return t.length?(t=t.map(s=>/^\d+$/.test(s)?parseInt(s):s),te(e,t)||""):e},M=e=>e?Array.isArray(e)?e.map(M).toString():(typeof e=="object"&&(e=JSON.stringify(e)),e.toString()):"",de=e=>{let r=new Date(e);return 25569+(r.getTime()-r.getTimezoneOffset()*60*1e3)/(1e3*60*60*24)},Z=(e,{dateStyle:r})=>typeof e>"u"?{cellType:"s",value:""}:typeof e=="number"?isFinite(e)?{cellType:"n",value:e}:void 0:e instanceof Date?isNaN(e)?void 0:{cellType:"n",value:de(e),style:r}:typeof e=="boolean"?{cellType:"b",value:e+0}:{cellType:"s",value:M(e)},Y=(e,r)=>{const t=r?r.cloneNode():document.createElement("si");let n=document.createElement("t");return n.textContent=e,t.appendChild(n),t},_=({value:e,row:r,column:t,template:n,cellType:s,style:b})=>{if(!s&&!e)return n;if(s==="f"){const D=e.querySelector("v");return D&&D.remove(),e}const y=n?n.cloneNode():document.createElement("c");if(r&&t&&(t=typeof t=="number"?ye(t):t,y.setAttribute("r",t+r)),typeof e>"u")return y;const m=document.createElement("v");return y.setAttribute("t",s),b&&(y.setAttribute("s",b),y.removeAttribute("t")),m.textContent=e,y.appendChild(m),y},ye=e=>{let r="";for(;e>0;){const t=(e-1)%26;r=String.fromCharCode(65+t)+r,e=Math.floor((e-1)/26)}return r},me=e=>{e=e.replace(/\d+/g,"");let r=0;for(let t=0;t<e.length;t++){const n=e.charCodeAt(t)-64;r=r*26+n}return r},ge=new RegExp("(?<=^\\$\\{)(?<table>table:)?(?<accessor>[^}]+)(?=}$)"),ee=/\$\{[^}]+}/g,we=async(e,r)=>{if(!e||!r)return e;const t=new DOMParser,n=new XMLSerializer,s=new ce;let b=await s.loadAsync(e);const y=await b.file("xl/styles.xml").async("string"),m=t.parseFromString(y,"application/xml"),D=m.querySelector("styleSheet");let F=m.querySelector("numFmts"),re=!!F;F||(F=document.createElementNS(null,"numFmts"));let U=document.createElementNS(null,"numFmt");U.setAttributeNS(null,"numFmtId","166"),U.setAttributeNS(null,"formatCode","yyyy\\-mm\\-dd;@");let ne=m.querySelectorAll("numFmt"),h=0;const O=F.cloneNode();ne.forEach(l=>{O.append(l),h++}),O.append(U),h++,O.setAttribute("count",h),re?F.replaceWith(O):D.prepend(O);const G=m.querySelector("cellXfs"),A=document.createElement("xf");A.setAttributeNS(null,"numFmtId",166),A.setAttributeNS(null,"fontId",0),A.setAttributeNS(null,"fillId",0),A.setAttributeNS(null,"borderId",0),A.setAttributeNS(null,"xfId",0),A.setAttributeNS(null,"applyNumberFormat",1);const le=m.querySelectorAll("cellXfs xf");h=0;const L=G.cloneNode();le.forEach(l=>{L.append(l),h++}),h++,L.append(A),L.setAttribute("count",h);const j=h-1;G.replaceWith(L);const oe=n.serializeToString(m).replace(/ ?xmlns="(http:\/\/www\.w3\.org\/1999\/xhtml)?"/g,"");await s.file("xl/styles.xml",oe);let se=await b.file("xl/sharedStrings.xml").async("string");const V=t.parseFromString(se,"application/xml"),K=V.querySelector("sst"),T=[];let S=[];V.querySelectorAll("si").forEach((l,c)=>{if(l.querySelector("r")){const q=l.innerHTML.replace(ee,k=>M(P(r,k.replace(/\$\{|}/g,""))));return l.innerHTML=q,S.push(l),T[c]={value:S.length-1,cellType:"s"},!1}const $=l.querySelector("t");if(!$)return!1;const N=$.textContent;let E=N.match(ge);if(!E){let i=N.replace(ee,q=>M(P(r,q.replace(/\$\{|}/g,""))));return S.push(Y(i,l)),T[c]={value:S.length-1,cellType:"s"},!1}let{accessor:v,table:H}=E.groups;const g=typeof H=="string";let p=P(r,v);if(typeof p>"u")return!1;if(g)return p||(p=[]),T[c]={isTable:g,value:p.map(i=>Z(i,{dateStyle:j}))},!1;if(Array.isArray(p))return T[c]=p.map(i=>Z(i,{dateStyle:j})),!1;T[c]=Z(p,{dateStyle:j})});const X=[],W=l=>{let c=X.indexOf(l);return c===-1&&(X.push(l),c=X.length-1),l=c+S.length,l},ie=Object.keys(b.files).filter(l=>/xl\/worksheets\/[^/]+$/.test(l));for(let l of ie){let c=await b.file(l).async("string"),R=t.parseFromString(c,"application/xml"),$=R.querySelectorAll("sheetData row");const N=[];let E=0;for(let g of $){let p=parseInt(g.getAttribute("r")),i=[],q=0;g.querySelectorAll("c").forEach(o=>{let u=me(o.getAttribute("r"))+q,d=o.querySelector("v")||{};if(o.querySelector("f")){const a=o,w="f";return i[u]=Object.assign({},{value:a,cellType:w},{template:o}),!1}let I=o.getAttribute("t");if(!I||I!=="s")return i[u]=Object.assign({},{template:o}),!1;let z=T[d.textContent]||{};if(!Array.isArray(z)){let{value:a,cellType:w,style:B,isTable:J}=z;return J?(i[u]=a.map(x=>x?(x.cellType==="s"&&typeof x.value=="string"&&(x.value=W(x.value)),{value:x.value,cellType:x.cellType,style:x.style,template:o}):{template:o}),!1):(w==="s"&&typeof a=="string"&&(a=W(a)),i[u]=Object.assign({},{value:a,cellType:w,style:B},{template:o}),!1)}for(let a=0;a<z.length;a++){let{value:w,cellType:B,style:J}=z[a]||{};B==="s"&&typeof w=="string"&&(w=W(w)),i[u+a]=Object.assign({},{value:w,cellType:B,style:J},{template:o}),a&&q++}});let k=Math.max(...i.filter(o=>Array.isArray(o)).map(o=>o.length));if(k<=0){let o=E+p;const C=i.map((d,f)=>{if(d)return _(Object.assign({},d,{row:o,column:f}))}).filter(Boolean),u=g.cloneNode();u.setAttribute("r",o),C.forEach(d=>u.append(d)),N.push(u);continue}for(let o=0;o<k;o++){let C=E+p;E++;const u=i.map((f,I)=>{if(f)return Array.isArray(f)?typeof f[o]>"u"?void 0:_(Object.assign({},f[o],{row:C,column:I})):_(Object.assign({},f,{row:C,column:I}))}),d=g.cloneNode();d.setAttribute("r",C),u.forEach(f=>{f&&d.append(f)}),N.push(d)}}const v=R.querySelector("sheetData").cloneNode();N.forEach(g=>v.append(g)),R.querySelector("sheetData").replaceWith(v);const H=n.serializeToString(R).replace(/ ?xmlns="http:\/\/www\.w3\.org\/1999\/xhtml"/g,"");await s.file(l,H)}S=[...S,...X.map(l=>Y(l))];const Q=K.cloneNode();S.forEach(l=>Q.append(l)),K.replaceWith(Q);const ae=n.serializeToString(V).replace(/ ?xmlns="http:\/\/www\.w3\.org\/1999\/xhtml"/g,"");return await s.file("xl/sharedStrings.xml",ae),await s.generateAsync({type:"blob"})},he=async(e,r)=>{if(!e||!r)throw Error("No template or data provided");if(typeof e=="string"&&e.match(/^https?:/)){const t=await fetch(e).catch(n=>!1);if(!t)throw Error("Can't fetch the template URL");e=t.arrayBuffer()}return await we(e,r)},xe=async(e,r,t,n)=>{t||(t=new Date().toISOString().substring(0,10)+" - Report.xlsx"),fe(await he(e,r),t,n)};export{xe as d};
